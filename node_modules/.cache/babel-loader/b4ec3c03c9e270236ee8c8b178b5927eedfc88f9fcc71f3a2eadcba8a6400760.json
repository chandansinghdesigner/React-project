{"ast":null,"code":"let Declaration = require('../declaration');\nlet flexSpec = require('./flex-spec');\nclass JustifyContent extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'justify-content';\n  }\n\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n    if (spec === 2009) {\n      return prefix + 'box-pack';\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-pack';\n    }\n    return super.prefixed(prop, prefix);\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0];\n    if (spec === 2009 || spec === 2012) {\n      let value = JustifyContent.oldValues[decl.value] || decl.value;\n      decl.value = value;\n      if (spec !== 2009 || value !== 'distribute') {\n        return super.set(decl, prefix);\n      }\n    } else if (spec === 'final') {\n      return super.set(decl, prefix);\n    }\n    return undefined;\n  }\n}\nJustifyContent.names = ['justify-content', 'flex-pack', 'box-pack'];\nJustifyContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-around': 'distribute',\n  'space-between': 'justify'\n};\nmodule.exports = JustifyContent;","map":{"version":3,"names":["Declaration","require","flexSpec","JustifyContent","normalize","prefixed","prop","prefix","spec","set","decl","value","oldValues","undefined","names","module","exports"],"sources":["D:/React-project/node_modules/autoprefixer/lib/hacks/justify-content.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet flexSpec = require('./flex-spec')\n\nclass JustifyContent extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'justify-content'\n  }\n\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-pack'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      let value = JustifyContent.oldValues[decl.value] || decl.value\n      decl.value = value\n      if (spec !== 2009 || value !== 'distribute') {\n        return super.set(decl, prefix)\n      }\n    } else if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nJustifyContent.names = ['justify-content', 'flex-pack', 'box-pack']\n\nJustifyContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-around': 'distribute',\n  'space-between': 'justify'\n}\n\nmodule.exports = JustifyContent\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AAErC,MAAME,cAAc,SAASH,WAAW,CAAC;EACvC;AACF;AACA;EACEI,SAASA,CAAA,EAAG;IACV,OAAO,iBAAiB;EAC1B;;EAEA;AACF;AACA;EACEC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACrB,IAAIC,IAAI;IACP,CAACA,IAAI,EAAED,MAAM,CAAC,GAAGL,QAAQ,CAACK,MAAM,CAAC;IAClC,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,OAAOD,MAAM,GAAG,UAAU;IAC5B;IACA,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,OAAOD,MAAM,GAAG,WAAW;IAC7B;IACA,OAAO,KAAK,CAACF,QAAQ,CAACC,IAAI,EAAEC,MAAM,CAAC;EACrC;;EAEA;AACF;AACA;EACEE,GAAGA,CAACC,IAAI,EAAEH,MAAM,EAAE;IAChB,IAAIC,IAAI,GAAGN,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAIC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI,EAAE;MAClC,IAAIG,KAAK,GAAGR,cAAc,CAACS,SAAS,CAACF,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAACC,KAAK;MAC9DD,IAAI,CAACC,KAAK,GAAGA,KAAK;MAClB,IAAIH,IAAI,KAAK,IAAI,IAAIG,KAAK,KAAK,YAAY,EAAE;QAC3C,OAAO,KAAK,CAACF,GAAG,CAACC,IAAI,EAAEH,MAAM,CAAC;MAChC;IACF,CAAC,MAAM,IAAIC,IAAI,KAAK,OAAO,EAAE;MAC3B,OAAO,KAAK,CAACC,GAAG,CAACC,IAAI,EAAEH,MAAM,CAAC;IAChC;IACA,OAAOM,SAAS;EAClB;AACF;AAEAV,cAAc,CAACW,KAAK,GAAG,CAAC,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC;AAEnEX,cAAc,CAACS,SAAS,GAAG;EACzB,UAAU,EAAE,KAAK;EACjB,YAAY,EAAE,OAAO;EACrB,cAAc,EAAE,YAAY;EAC5B,eAAe,EAAE;AACnB,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGb,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}